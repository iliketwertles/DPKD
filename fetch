#!/usr/bin/env python
import subprocess
import os
import platform
from termcolor import colored

# ascii art
#   .----.
#   |C>_ |
# __|____|__
#|  ______--|
#`-/.::::.\-'a
# `--------'

# check distro
with open('/etc/os-release') as f:
    distro = []
    for ln in f:
        if ln.startswith("ID="):
            distro.append(ln[3:])

for word in distro:
    distro = colored(word.strip("\n").capitalize(), 'cyan')
if distro == []:
    distro = "¯\_(ツ)_/¯"

# check package manager and get packages acordingly
if os.path.exists('/etc/pacman.d'):
    pkgs = colored(subprocess.getoutput('pacman -Q | wc -l'), 'blue')
elif os.path.exists('/etc/apt'):
    pkgs = colored(subprocess.getoutput('dpkg --list | wc -l'), 'cyan')
elif os.path.exists('/etc/dnf'):
    pkgs = colored(subprocess.getoutput('rpm -qa | wc -l'), 'cyan')
else:
    pkgs = "¯\_(ツ)_/¯"

# kernel, nothing special
kernel = colored(platform.release(), 'yellow')

# check desktop env
if os.environ.get('XDG_CURRENT_DESKTOP') == None and os.environ.get('DESKTOP_SESSION') == None:
    desktop = "¯\_(ツ)_/¯"
elif os.environ.get('XDG_CURRENT_DESKTOP') == None: 
    desktop = colored(os.environ.get('DESKTOP_SESSION').capitalize, 'red')
else:
    desktop = colored(os.environ.get('XDG_CURRENT_DESKTOP'), 'red')

# not needed but looks cool, stuff
prompt = colored('C>_', 'green')

logo=f'''   .----.
   |{prompt} |     Distro: {distro}
 __|____|__   Packages: {pkgs}
|  ______--|  Kernel: {kernel}
`-/.::::.\-'a Desktop: {desktop}
 `--------'
  '''
print(logo)
